(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{433:function(s,t,n){"use strict";n.r(t);var a=n(29),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"字符串方法和技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法和技巧"}},[s._v("#")]),s._v(" 字符串方法和技巧")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("String是基本数据类型，同时也是基本包装类型。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("字符串方法")]),s._v("：")])])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nstr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("charAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//e 返回给定位置的字符")]),s._v("\nstr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("charcodeAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//101 返回给定位置字符的字符编码")]),s._v("\nstr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//e ie8+")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以接受任意多个参数拼接成新的字符串，但不会改变原字符串")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//截取字符串，接受一或两个参数(开始位置和结束位置)，接受负值时会将负值与字符串长度相加")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//截取字符串，接受一或两个参数(开始位置和结束位置，会将较小的参数作为起始位置)，接受负值时会将负的参数转换为零")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//截取字符串，接受一或两个参数(开始位置和截取的字符个数)，接受负值时会将第一个负的参数加上字符串长度，将第二个负的参数转换为0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可接受两个参数，要查找的子字符串和查找起点(可选)，找到返回位置，找不到返回-1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lastIndexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从数组的末尾开始查找")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("trim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除前置和后缀的空格 返回的是字符串的副本，原始字符串不变")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLowerCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转小写")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toUpperCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转大写")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLocaleLowerCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转小写，针对地区的方法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLocaleUpperCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转大写，针对地区的方法")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//接收一个参数，正则表达式或者RegExp对象")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//接受一个正则，返回字符串中第一个匹配项的索引，没有返回-1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//替换字符串。接受两个参数，第一个是一个字符串或者RegExp对象，")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第二个参数是一个字符串或者函数。如果第一个参数是一个字符串，")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么只会替换第一个子字符串，要想替换所有唯一的方法就是提供一个")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//正则表达式，指定全局g标志")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//replace()方法的第二个参数也可以是一个函数")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("originalText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                match "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//模式的匹配项")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//正则表达式定义了多个捕获组的情况下，是第二，三...匹配项")]),s._v("\n                pos "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//模式的匹配项在字符串中的位置")]),s._v("\n                originalText "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//原始字符串")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分割字符串，并返回一个数组。第一个参数接受一个分隔符(可以是字符串或者RegExp对象)，")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可选的第二个参数用于指定返回数组的大小")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("localeCompare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//比较两个字符串，如果字符串在字母表中应该排在字符串参数之前，返回一个负数。相等返回0，之后返回正数")]),s._v("\nString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fromCharcode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//构造函数本身的静态方法，接收一个或多个字符编码，转换成字符串，与charCodeAt相反")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("ul",[n("li",[s._v("*"),n("strong",[s._v("使用技巧")]),s._v("：")])]),s._v(" "),n("ol",[n("li",[s._v("如何多次复制一个字符串")])]),s._v(" "),n("h2",{attrs:{id:"数组方法和技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组方法和技巧"}},[s._v("#")]),s._v(" 数组方法和技巧")])])}),[],!1,null,null,null);t.default=e.exports}}]);